plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'jacoco'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.agpjacoco"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    jacoco {
        version "$jacocoVersion"
    }
}
jacoco {
    toolVersion "$jacocoVersion"
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

tasks.register("jacocoTestReport", JacocoReport) {
    reports {
        html.enabled = true
        xml.enabled = true
    }
    getClassDirectories().setFrom(fileTree(
            dir: "${rootProject.projectDir}",
            includes: ["app/build/tmp/kotlin-classes/debug/**/*.class"],
            // ignore generated code
            excludes: ["**/R.class", "**/R\$*.class", "**/Manifest.class", "**/Manifest\$*.class", "**/BuildConfig.class"]))
    getSourceDirectories().setFrom(files(
            "${project.projectDir}/src/main/java"
    ))
    getExecutionData().setFrom(fileTree(
            dir: "${rootProject.projectDir}",
            includes: [
                    "app/build/outputs/code_coverage/debugAndroidTest/connected/*.ec"
            ]))
    dependsOn tasks.named("createDebugAndroidTestCoverageReport")
}
